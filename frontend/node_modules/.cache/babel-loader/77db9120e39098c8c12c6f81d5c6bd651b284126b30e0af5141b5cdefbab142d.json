{"ast":null,"code":"var _jsxFileName = \"/Users/undo/Desktop/Chronos/frontend/src/components/BuildStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BuildStatus() {\n  _s();\n  const [status, setStatus] = useState('Pending');\n  useEffect(() => {\n    // Fetch build status from the backend\n    // Example: setStatus('Success')\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Build Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(BuildStatus, \"LyqG309arIJ2a8VC4yyyDhgs1dk=\");\n_c = BuildStatus;\nexport default BuildStatus;\nvar _c;\n$RefreshReg$(_c, \"BuildStatus\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BuildStatus","_s","status","setStatus","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/undo/Desktop/Chronos/frontend/src/components/BuildStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction BuildStatus() {\n    const [status, setStatus] = useState('Pending');\n\n    useEffect(() => {\n        // Fetch build status from the backend\n        // Example: setStatus('Success')\n    }, []);\n\n    return (\n        <div>\n            <h2>Current Build Status: {status}</h2>\n        </div>\n    );\n}\n\nexport default BuildStatus;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,SAAS,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACZ;IACA;EAAA,CACH,EAAE,EAAE,CAAC;EAEN,oBACIE,OAAA;IAAAK,QAAA,eACIL,OAAA;MAAAK,QAAA,GAAI,wBAAsB,EAACF,MAAM;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEd;AAACP,EAAA,CAbQD,WAAW;AAAAS,EAAA,GAAXT,WAAW;AAepB,eAAeA,WAAW;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}